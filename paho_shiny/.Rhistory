cn <- countries[l] #country of interest
adjMat <- read.csv(paste0("data/", cn, "_adjacency_matrix.csv"))
### SIRVERA DATA: Mexico & Brazil yearly classification from 2000 to curent date
## The script takes monthly case timeseries data for Mexico and Brazil,
## processes the data for classification alghorithm monthly from the current date to Jan 2000 via:
## a) case transformation to binary data expanded by using the rolling window method,
## b) output statistics from logistic regression models and patterns detected from case incidence data
rm(list=ls())
library(zoo)
source("R/gap_fc.R")
source("R/RollingWind_fc.R")
source("R/LRmodel_fc.R")
source("R/RemoveWildlifeVar.R")
countries <- c("Mexico", "Brazil")
setwd("~/Dropbox/PAHOsurveillance/Analysis")
source("R/gap_fc.R")
source("R/RollingWind_fc.R")
source("R/LRmodel_fc.R")
source("R/RemoveWildlifeVar.R")
countries <- c("Mexico", "Brazil")
setwd("~/Dropbox/PAHOsurveillance/Analysis")
rm(list=ls())
library(maptools)
library(zoo)
library(lubridate)
source("R/states_ts.R")
## data
dogs <- read.csv("data/SIRVERA_dogs16(clean_statenames).csv")
countries <- c("Mexico", "Brazil")
## set all dates from Jan 1995 to Dec 2015
current.date <- as.Date("2015-12-01") ## NOTE: this should be automated for each time data is updated
dates <- seq(as.Date("1995-01-01"), current.date, by="months")
dates <- strftime(strptime(dates, format="%Y-%m-%d"),"%Y-%m")
setwd("~/Dropbox/PAHO_RShiny")
rm(list=ls())
library(maptools)
library(zoo)
library(lubridate)
source("~/Dropbox/PAHOsurveillance/Analysis/R/states_ts.R")
dogs <- read.csv("~/Dropbox/PAHOsurveillance/Analysis/data/SIRVERA_dogs16(clean_statenames).csv")
countries <- c("Mexico", "Brazil")
current.date <- as.Date("2015-12-01") ## NOTE: this should be automated for each time data is updated
dates <- seq(as.Date("1995-01-01"), current.date, by="months")
dates <- strftime(strptime(dates, format="%Y-%m-%d"),"%Y-%m")
getwd()
setwd("~/Dropbox/PAHO_RShiny")
names <- countries
for (l in 1:length(countries)){
## subset country and yrs of interest
cn = countries[l]
yr = 1995
country <- subset(dogs, Pais == cn & Ano >= yr)
yrs <- sort(unique(country$Ano))
country.f <- paste0("data/ShapeFiles/America_Adm_1/", cn, ".shp")
sp.country <- readShapePoly(country.f)
states <- sp.country@data$ADM1_NAME
## sort out full dates (months included): Converted month 0 to 1 bc do not want to exclude evidence of circulation
country$Mes[which(country$Mes=="0")] <- 1
country$date <- as.POSIXct(as.yearmon(paste(country$Ano, country$Mes, sep="-")))
country$date <- strftime(strptime(country$date, format="%Y-%m-%d"),"%Y-%m")
## timeseries: sum all cases for each month and year/ state
country_ts = states_ts(dates = dates, states = states, data = country)
fb <- paste0("output/", cn, "_monthly_cases_state.csv")
write.csv(country_ts,fb,row.names=F)
print(setdiff(unique(country$UnidMaior),states))
}
### SIRVERA DATA: Mexico & Brazil yearly classification from 2000 to curent date
## The script takes monthly case timeseries data for Mexico and Brazil,
## processes the data for classification alghorithm monthly from the current date to Jan 2000 via:
## a) case transformation to binary data expanded by using the rolling window method,
## b) output statistics from logistic regression models and patterns detected from case incidence data
rm(list=ls())
library(zoo)
source("R/gap_fc.R")
source("R/RollingWind_fc.R")
source("R/LRmodel_fc.R")
source("R/RemoveWildlifeVar.R")
countries <- c("Mexico", "Brazil")
l=2
cn <- countries[l] #country of interest
states <- removeWild(cn=cn)
head(states)
tail(sates, 24)
tail(states, 24)
for (l in 1:length(countries)){
cn <- countries[l] #country of interest
states <- removeWild(cn=cn)
# HARD CODE IMPORTANT VALUES (so not recalculating throughout functions etc)
study.mths <- length(seq(as.Date("2000-01-01"), as.Date(as.yearmon(rev(states$date)[1])), by="month"))
mths  <-  nrow(states)
state_gaps <- list()
state_names <- colnames(states)[1:(ncol(states)-1)]
n  <-  length(state_names)
yrs  <-  length(unique(strftime(strptime(as.Date(as.yearmon(states$date)), format="%Y-%m-%d"),"%Y")))
Y2  <-  24 # period of two years
states.fulldata <- states
### CASE DETECTION - Logistic Regression
## case presence: rolling window method
RWoutput <- RollingWind(states, mths)
presence <- RWoutput$presence
presence.rw <- RWoutput$presence.rw
presence.rw.fulldata <- presence.rw
## working back from current date to the last year period
ms <- mths:1
ms.rw <- ms; ms.rw[1] <- ms[1]-1
## initiate: output stored in a list of df by 6 month periods
LRcoefsList <- list() ## store LR coeffs for truncated periods (length(ms)=13)
length(LRcoefsList) <- study.mths
## prep data for class algorithm (LR)
for (r in 1:study.mths){ #for each month in r
end.period <- ms[r]-60+1
states <- states.fulldata[end.period:ms[r],]
presence.rw <- presence.rw.fulldata[end.period:ms.rw[r],]
## set up the frame to store calculations in
LRcoefs <- data.frame(state = state_names,
chsq.prob = rep(NA, n),
odds = rep(NA, n),
pval = rep(NA, n),
cases_yearly=numeric(n),
max_cases_monthly=numeric(n),
cases_2years=numeric(n),
max_gaplength=numeric(n),
mean_gaplength=numeric(n),
t_since_last_case=numeric(n),
t_nocase_prior_lastcase=numeric(n),
consecutive_cases_2yr=rep(NA, n))
### INTERVALS BETWEEN DETECTED CASES: gaps for each state individually
for(d in 1:n){
state_cases <- states[,d]
gaps <- gap_fc(state_cases, l=length(state_cases))
state_gaps[[d]] <- gaps
}
names(state_gaps) <- state_names
for (i in 1:n){ #for each state in n
LRcoefs$cases_yearly[i] <- sum(states[,i])/(nrow(states)/12)
LRcoefs$max_cases_monthly[i] <- max(states[,i])
LRcoefs$cases_2years[i] <- ifelse(length(states[,i])>24,sum(states[(nrow(states)-Y2):nrow(states),i]), sum(states[,i]))
LRcoefs$max_gaplength[i] <- max(state_gaps[[i]]) ## max gap length
LRcoefs$mean_gaplength[i] <- mean(state_gaps[[i]]) ## mean gap length
LRcoefs$t_since_last_case[i] <- state_gaps[[i]][length(state_gaps[[i]])] ## time since last case
LRcoefs$t_nocase_prior_lastcase[i] <- ifelse(length(state_gaps[[i]])>1,
state_gaps[[i]][(length(state_gaps[[i]])-1)],0) ## with no case prior to last case
## are there cases present over consecutive months in last 2 yrs
end <- length(states[,i])
bincases <- ifelse(states[(end-Y2):end,i]>0,1,0)
cons <- rle(bincases)
ind <- which(cons$length[cons$values == 1]>1)
LRcoefs$consecutive_cases_2yr[i] <- ifelse(length(ind)>0,"Y","N")
state <- data.frame(counts=presence.rw[,i], months=1:nrow(presence.rw))
## only fit if at least 2 cases and 1 zeros!
if(sum(state$counts)>1 && sum(state$counts)!=length(state$counts)){
m = LRmodel(data <- state) ## LR model
LRcoefs$chsq.prob[i] <- m$chsq.prob ## check whether better than a null model
LRcoefs$odds[i] <- m$odds  ## check whether increasing or decreasing trend
LRcoefs$pval[i] <- m$pval
rm(m)
}
}
LRcoefsList[[r]] <- LRcoefs
print(r)
}
## loop tru the LRcoefsList and save output for each month separately
month.names <- rev(seq(as.Date("2000-01-01"), as.Date(as.yearmon(rev(states.fulldata$date)[1])), by="month"))
for(j in 1:length(LRcoefsList)){
this.list <- data.frame(LRcoefsList[[j]])
this.month <- month.names[j]
write.csv(this.list, paste0("output/", cn, "_MonthlyOutputFor_", this.month, ".csv"), row.names = FALSE)
}
}
### SIRVERA DATA: Mexico & Brazil yearly classification from 2000 to current date
## The script takes pre-calculated monthly outputs for each state in Mexico and Brazil from Jan 2000 to now
## and classifies each state monthly using the CLASSIFICATION ALGORITHM
rm(list=ls())
library(zoo)
source("R/gap_fc.R")
source("R/LRmodel_fc.R")
source("R/RollingWind_fc.R")
source("R/RemoveWildlifeVar.R")
countries <- c("Mexico", "Brazil")
current.date <- as.Date("2015-12-01")
ms <- seq(as.Date("2000-01-01"), current.date, by="month")
for (l in 1:length(countries)){
cn <- countries[l] #country of interest
## import adjecency matrix
adjMat <- read.csv(paste0("data/", cn, "_adjacency_matrix.csv"))
### Import data: monthly output statistics on case data
LRcoefsList <- list()
for(m in 1:length(ms)){
LRcoefsList[[m]] <- read.csv(paste0("output/", cn, "_MonthlyOutputFor_", ms[m], ".csv"))
}
state_names <- LRcoefsList[[1]]$state
###Classify
## Add trend
for(i in 1:length(ms)){
LRcoefsList[[i]]$trend <- NA
for (j in 1:nrow(LRcoefsList[[i]])){
if(!is.na(LRcoefsList[[i]]$chsq.prob[j]) & LRcoefsList[[i]]$chsq.prob[j]<0.05){
LRcoefsList[[i]]$trend[j] <- ifelse(LRcoefsList[[i]]$odds[j]>1,"increasing","decreasing")
}else{
LRcoefsList[[i]]$trend[j] <- "no trend"
}
}
}
## run the algorithm
criteria <- LRcoefsList
for(j in 1:length(ms)){
criteria[[j]]$phase <- NA
for(i in 1: nrow(criteria[[j]])){
if(criteria[[j]]$cases_2years[i]==0){
## absent
criteria[[j]]$phase[i] <- "Absent"
}else{
##endemic or declinig
conscas <- criteria[[j]]$consecutive_cases_2yr[i]
criteria[[j]]$phase[i] <- ifelse(criteria[[j]]$trend[i]=="decreasing","Declining", "Endemic")
}
if(exists("conscas")){
if(conscas=="N"){
## abs vulnerable, intermittent, declining
criteria[[j]]$phase[i] <- ifelse(criteria[[j]]$t_nocase_prior_lastcase[i]>24,"Absent-Vulnerable", "Intermittent")
criteria[[j]]$phase[i] <- ifelse(criteria[[j]]$phase[i]=="Intermittent" &
criteria[[j]]$trend[i]=="decreasing","Declining", criteria[[j]]$phase[i])
}
rm(conscas)
}
}
## Risk of incursions: if neighbours with endemic/declining -> "Absent-Vulnerable"
## Risk of incursions: if Chiapas or Mato Grosso do Sul "Absent" -> "Absent-Vulnerable"
for(i in 1: nrow(criteria[[j]])){
if (criteria[[j]]$phase[i]=="Absent"){
nbs <- which(adjMat[i,]==1) #rows which correspond to neighbours in shapefile
nbp <- criteria[[j]]$phase[nbs]
ph <- which(nbp=="Endemic"); phh <- which(nbp=="Declining")
if(length(ph>0) | length(phh>0)){
criteria[[j]]$phase[i] <- "Absent-Vulnerable"
}
}
## Chiapas and Matto Grosso do Sol
N <- as.numeric(criteria[[j]]$state[i]=="Chiapas" | criteria[[j]]$state[i]=="Mato.Grosso.do.Sul") + as.numeric(criteria[[j]]$phase[i]=="Absent")
if (N==2){
criteria[[j]]$phase[i] <- "Absent-Vulnerable"
}
}
}
## unlist per period, store in matrix and and save ##
classifications <- matrix(NA, nrow=length(state_names), ncol=length(ms))
for(i in 1:length(ms)){
# for each period i
classifications[,i] <- criteria[[i]]$phase
}
classifications <- data.frame(classifications)
colnames(classifications) <- ms
classifications <- cbind(state=state_names, classifications)
f <- paste0("output/", cn, "_classified_monthly.csv")
write.csv(classifications, f, row.names=F)
}
## PHILIPPINES DATA: Classification Framework
## Name: Kristyna Rysava
## Date: 20/09/17
## Code: Prepare Philippines (by province) classifcation output for the application use
### 1) Inspect format and data used for LAC ###
setwd("~/Dropbox/PAHO_RShiny/for_isty")
library(rgdal)
my.data <- readRDS("Brazil.RData")
#write.csv(my.data, "test.csv", row.names=F)
adm1 <- readOGR("ShapeFiles/America_Adm_1/adm1_amro_lat_long.shp", layer="adm1_amro_lat_long")
bra <- readOGR("ShapeFiles/America_Adm_1/Brazil.shp", layer="Brazil") # by state Brazil
mex <- readOGR("ShapeFiles/America_Adm_1/Mexico.shp", layer="Mexico") # by state Mexico
cnt <- readOGR("ShapeFiles/countries_shp/countries.shp", layer="countries")
### 2) Prepare matching datasets for PHP ###
## for PHP: Philippi
setwd("~/Dropbox/GARC_Philippines")
phil <- readOGR("data/shp/PHL_adm1.shp", layer="PHL_adm1"); head(phil@data)
prov_namesShp <- toupper(phil@data$NAME_1)
classis <- read.csv("output/Philippines_classified_monthly.csv"); head(class, 1) # from 2015.01.01 to 2016.12.01
head(classis)
classis$state <- gsub("[.]", " ", classis$state)
setdiff(prov_namesShp, classis$state)
setdiff(classis$state, prov_namesShp)
classis$state[which(classis$state=="TAWI TAWI")] <- "TAWI-TAWI"
head(classes)
head(clasis)
head(classis)
## Name: Kristyna Rysava
## Date: 12/1/18
## Code: Prepare Brazil & Mexico classifcation output for the application use
### 1) Inspect format and data used for LAC ###
setwd("~/Dropbox/PAHO_RShiny/paho_shiny")
library(rgdal)
rm(list=ls())
setwd("~/Dropbox/PAHO_RShiny/paho_shiny")
bra.old <- readRDS("Brazil.RData")
head(bra.old)
unique(bra.old$State)
bra.old <- readRDS("Brazil.RData")
mex.old <- readRDS("Mexico.RData")
unique(bra.old$State)
unique(mex.old$State)
namesBra <- unique(bra.old$State)
namesMex <- unique(mex.old$State)
classisBra <- read.csv("Brazil_classified_monthly.csv")
head(classisBra)
classisBra <- read.csv("Brazil_classified_monthly.csv"); head(classisBra)
gsub("[.]", " ", classisBra$state)
classisBra$state <- gsub("[.]", " ", classisBra$state)
setdiff(namesBra, classisBra$state)
classisMex <- read.csv("Mexico_classified_monthly.csv"); head(classisMex)
gsub("[.]", " ", classisMex$state)
classisMex$state <- gsub("[.]", " ", classisMex$state)
setdiff(namesMex, classisMex$state)
getwd()
bra.cases <- read.csv("~/Dropbox/PAHO_RShiny/output/Brazil_monthly_cases.csv"); head(bra.cases, 1) # from 2010-01 to 2016-12
bra.cases <- read.csv("~/Dropbox/PAHO_RShiny/output/Brazil_monthly_cases_state_WildRemoved.csv"); head(bra.cases, 1) # from 2010-01 to 2016-12
head(bra.old)
colnames(cases)
colnames(bra.cases)[1:ncol(bra.cases)-1]
gsub("[.]", " ", colnames(bra.cases)[1:ncol(bra.cases)-1])
colnames(bra.cases)[1:ncol(bra.cases)-1] <- gsub("[.]", " ", colnames(bra.cases)[1:ncol(bra.cases)-1])
setdiff(namesBra, colnames(bra.cases)[1:ncol(bra.cases)-1])
tail(bra.cases, 24)
mex.cases <- read.csv("~/Dropbox/PAHO_RShiny/output/Mexico_monthly_cases_state_WildRemoved.csv"); head(bra.cases, 1) # from 2010-01 to 2016-12
gsub("[.]", " ", colnames(mex.cases)[1:ncol(mex.cases)-1])
colnames(mex.cases)[1:ncol(mex.cases)-1] <- gsub("[.]", " ", colnames(mex.cases)[1:ncol(mex.cases)-1])
setdiff(namesMex, colnames(mex.cases)[1:ncol(mex.cases)-1])
final.bra <- bra.old
head(final.bra)
final.bra <- bra.old
final.bra$Value <- 0
final.bra$classification <- NA
head(final.bra)
final.bra <- bra.old
final.bra$Value <- 0
final.bra$Classification <- NA
head(final.bra)
head(bra.cases, 2)
head(bra.cases, 2)
for(i in 1: length(namesBra)){
ind <- which(final.bra$State==colnames(bra.cases)[i])
final.bra$Value[ind] <- bra.cases[,i]
}
head(final.bra); tail(final.bra)
head(classisBra)
classisBra <- as.matrix(classisBra)
i=1
classisBra <- as.matrix(classisBra)
classisBra[i,1]
which(final.bra$State==classisBra[i,1])
252/12
classisBra[1,]
ind <- which(final.bra$State==classisBra[i,1])
final.bra$Classification[ind]
as.character(classisBra[i,2:252])
classisBra[i,2:252]
final.bra[ind,]
head(classisBra,1)
5*12
252-60
ind <- which(final.bra$State==classisBra[i,1])[60:252]
final.bra[ind,]
ind <- which(final.bra$State==classisBra[i,1])[61:252]
length(as.character(classisBra[i,2:193]))
as.character(classisBra[i,2:193])
for(i in 1:length(namesBra)){
ind <- which(final.bra$State==classisBra[i,1])[61:252]
final.bra$Classification[ind] <- as.character(classisBra[i,2:193])
}
head(final.bra); tail(final.bra)
newC <- subset(final.bra, State=="Ceara"); tail(newC, 24)
newR <- subset(final.bra, State=="Rio Grande do Norte"); tail(newR, 24)
getwd()
write.csv(final.bra, "~/Dropbox/PAHO_RShiny/paho_shiny/Brazil.csv", row.names=F)
save(final.bra, file = "~/Dropbox/PAHO_RShiny/paho_shiny/Brazil.Rdata", row.names=F)
final.mex <- mex.old
final.mex$Value <- 0
final.mex$Classification <- NA
head(final.mex)
head(mex.cases, 2)
head(mex.cases, 2)
for(i in 1: length(namesMex)){
ind <- which(final.mex$State==colnames(mex.cases)[i])
final.mex$Value[ind] <- mex.cases[,i]
}
head(final.mex); tail(final.mex)
head(classisMex)
classisMex <- as.matrix(classisMex)
for(i in 1:length(namesMex)){
ind <- which(final.mex$State==classisMex[i,1])[61:252]
final.mex$Classification[ind] <- as.character(classisMex[i,2:193])
}
head(final.mex); tail(final.mex)
newC <- subset(final.mex, State=="Chiapas"); tail(newC, 24)
newY <- subset(final.mex, State=="Yucatan"); tail(newY, 24)
write.csv(final.mex, "~/Dropbox/PAHO_RShiny/paho_shiny/Mexico.csv", row.names=F)
save(final.mex, file = "~/Dropbox/PAHO_RShiny/paho_shiny/Mexico.Rdata", row.names=F)
runApp()
final.mex
newC <- subset(final.mex, State=="Chiapas"); tail(newC, 24)
newY <- subset(final.mex, State=="Yucatan"); tail(newY, 24)
saveRDS(final.mex, file = "~/Dropbox/PAHO_RShiny/paho_shiny/Mexico.RData")
head(final.bra); tail(final.bra)
newC <- subset(final.bra, State=="Ceara"); tail(newC, 24)
newR <- subset(final.bra, State=="Rio Grande do Norte"); tail(newR, 24)
saveRDS(final.bra, file = "~/Dropbox/PAHO_RShiny/paho_shiny/Brazil.RData")
runApp()
shiny::runApp()
709/58
shiny::runApp()
shiny::runApp()
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
GLOBAL_ABOUT = div(br(), p(h4(strong("About this tool:")),
"Regional rabies control programmes have been coordinated across the Americas
since the 1980s coordinated by",
tags$a(href = "http://www.paho.org/hq/index.php?option=com_topics&view=article&id=46&Itemid=40766&lang=en", strong("PAHO/Panaftosa,")),
" and aiming to eliminate dog-mediated rabies by",
tags$a(href = "https://www.frontiersin.org/articles/10.3389/fvets.2017.00004/full", strong("2022.")),
"This site shows the recent performance of the national rabies control programme, its progress at
subnational levels towards elimination, and locally tailored management guidance. Use the help button
(top right) for information on how to explore the site. Hover over a country on the map to show
information about the country and cases detected since 2005 (right hand graph) in relation to cases
across the region. Select a country to explore their situation in more detail (data currently only
shown for Mexico and Brazil). For more information about this tool, download our study (top left),
and for more information about the regional control programme visit the",
tags$a(href = "http://www.panaftosa.org/redipra16/index.php?lang=en", strong("REDIPRA webpages.")),
"",
p(h5(tags$a(href = "https://boydorr.shinyapps.io/paho_rabies/", "English,          "),
tags$a(href = "https://boydorr.shinyapps.io/paho_rabies_spanish/", "Tagalog          "),
align = "center"))
))
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
GLOBAL_ABOUT = div(br(), p(h4(strong("About this tool:")),
"Following the global targets of the",
tags$a(href = "https://endrabiesnow.org", strong("End Rabies Now")),
" campaign the ASEAN countries have committed to elimination of dog-mediated human rabies deaths by",
tags$a(href = "https://www.oie.int/esp/RABIES2015/presentation/Poster/ARES_POSTER.pdf", strong("2020")),
". In the Philippines, many provinces rapidly approach rabies freedom, whereas other areas are struggling to
control rabies with continued circulation posing a risk for re-introduction into neighbouring populations.
This site shows the recent performance of the national rabies control programme, its progress at subnational
levels towards elimination, and locally tailored management guidance.
Use the help button (top right) for information on how to explore the site. Hover over a province on the map
to show information about the province and cases detected since 2015 (right hand graph) in relation to cases
across the country. Select a province to explore its epidemiological situation in more detail.
For more information about the development of this tool and its application in Latin America,
download our study (top left).",
"",
p(h5(tags$a(href = "https://boydorr.shinyapps.io/paho_rabies/", "English,          "),
tags$a(href = "https://boydorr.shinyapps.io/paho_rabies_spanish/", "Tagalog          "),
align = "center"))
))
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
switch(class,
"Unclassified" = p(h5("The state is currently classified as",strong("UNCLASSIFIED:")),
"Undertake detailed contact-tracing investigations to identify the source of infection.
For locally-acquired human cases ensure rigorous enhancement of animal surveillance and investment in dog vaccination to prevent further spread.
For cases of exogenous origin, assuming no onward transmission enhanced surveillance should be continued and plans for emergency response strategies to maintain rabies freedom promptly implemented."
),
"Endemic" = p(h5("The state is currently classified as",strong("ENDEMIC:")),
"Monitor vaccination campaign implementation and coverage to identify areas for improvement.
Ensure >70% coverage achieved annually in all communities with high quality vaccines.
Current programmes are not working effectively enough to control rabies."
),
"Declining" = p(h5("The state is currently classified as", strong("DECLINING:")),
"Continue current programmes, which are working!
Develop plans for ", tags$a(href = "http://www.biorxiv.org/content/early/2016/12/31/096883", strong("enhancing surveillance")),
"and for", tags$a(href = "http://www.sciencedirect.com/science/article/pii/S0147957112001221", strong("emergency response and maintaining freedom."))),
"Intermittent" = p(h5("The state is currently classified as",strong("INTERMITTENT:")),
"Enhance surveillance to understand whether: ",
tags$ul( style = "list-style-type:none",
tags$li("1) transmission is endemic but surveillance is poor;"),
tags$li("2) transmission is interrupted but incursions are frequent;")
), "GPS locations of cases recorded to differentiate these scenarios.
For 1) improve vaccination to ensure high coverage in all communities with high quality vaccines.
For 2) direct control towards source populations and at-risk populations."
),
"Absent-Vulnerable" = p(h5("The state is currently classified as", strong("ABSENT-VULNERABLE:")),
"Maintain control effort while incursion risks remain.
Implement or maintain enhanced surveillance for early detection of any introduced cases.
Prepare an emergency response strategy and review after any incursions.
Sequence all cases to identify their variant and source.
Compile evidence to", tags$a(href = "http://www.biorxiv.org/content/early/2016/12/31/096883", strong("verify freedom")),
" from dog-mediated rabies!"),
"Absent" = p(h5("The state is currently classified as",strong("ABSENT:")),
"Maintain enhanced surveillance.
Sequence any cases to identify their variant and source.
Submit evidence to", tags$a(href = "http://www.biorxiv.org/content/early/2016/12/31/096883", strong("verify freedom")),
" from dog-mediated rabies!")
)
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
COUNTRY_ABOUT = p("Using animal rabies data from the national rabies database coordinated by the",
tags$a(href = "http://www.bai.da.gov.ph", strong("Bureau of Animal Industry, Department of Agriculture")),
"and human rabies-suspect cases acquired through the",
tags$a(href = "http://www.doh.gov.ph", strong("Philippines Department of Health")),
", states were classified into six epidemiological situations (see the right-hand key).
The map gives the current classification for each province in the Philippines.
Select a province to see its progress towards elimination of dog-mediated rabies and recommendations
for rabies management in the given province.")
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
runApp('~/Dropbox/PAHO_RShiny/for_isty/for_jamie')
